name: XRechnung Validation Tests
on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

jobs:
  xrechnung_tests:
    env:
      VALIDATOR_VERSION: '1.5.0'
      VALIDATOR_JAR_FILE: "validationtool-1.5.0-standalone.jar"
    name: XRechnung tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: '1.21'
      - name: Install Dependencies
        env:
          GOPROXY: https://proxy.golang.org,direct
        run: go mod download
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
      - name: Download validator
        run: curl -L "https://github.com/itplr-kosit/validator/releases/download/v$VALIDATOR_VERSION/validator-$VALIDATOR_VERSION-distribution.zip" --output validator.zip
      - name: Download configuration
        run: curl -L "https://github.com/itplr-kosit/validator-configuration-xrechnung/releases/download/release-2023-11-15/validator-configuration-xrechnung_3.0.1_2023-11-15.zip" --output validator-configuration.zip
      - name: Unzip validator
        run: unzip -n validator.zip "$VALIDATOR_JAR_FILE"
      - name: Unzip configuration
        run: unzip -n validator-configuration.zip
      - name: Convert German invoice & run validator
        env:
          INPUT_FILE: './test/data/invoice-de-de.json'
          OUTPUT_FILE: './invoice-de-de.xml'
        run: |
          go run ./cmd/gobl.xinvoice convert "$INPUT_FILE" > "$OUTPUT_FILE"
          java -jar "$VALIDATOR_JAR_FILE" -s scenarios.xml -r "${PWD}" -h "$OUTPUT_FILE"
      - name: Convert simplified invoice & run validator
        env:
          INPUT_FILE: './test/data/invoice-without-buyers-tax-id.json'
          OUTPUT_FILE: './invoice-without-buyers-tax-id.xml'
        run: |
          go run ./cmd/gobl.xinvoice convert "$INPUT_FILE" > "$OUTPUT_FILE"
          java -jar "$VALIDATOR_JAR_FILE" -s scenarios.xml -r "${PWD}" -h "$OUTPUT_FILE"
      - name: Convert credit note & run validator
        env:
          INPUT_FILE: './test/data/credit-note.json'
          OUTPUT_FILE: './credit-note.xml'
        run: |
          go run ./cmd/gobl.xinvoice convert "$INPUT_FILE" > "$OUTPUT_FILE"
          java -jar "$VALIDATOR_JAR_FILE" -s scenarios.xml -r "${PWD}" -h "$OUTPUT_FILE"
